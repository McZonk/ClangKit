<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE header PUBLIC "-//Apple Computer//DTD HEADERDOC 1.2//EN" "/System/Library/DTDs/HeaderDoc-1.2.dtd">
<header id="//xsdoc_ref/doc/header/CKFixIt.h" lang="c" filename="CKFixIt.h" headerpath="/Volumes/Brain/Documents/Development/GitHub/ClangKit/Documentation/../ClangKit/Classes/CKFixIt.h"><name>CKFixIt.h</name>
<includes>
</includes>
<desc><p/></desc>
<classes><class id="//xsdoc_ref/occ/cl/CKDiagnostic" lang="occ"><name>CKDiagnostic</name>
<declaration><declaration_comment>/*******************************************************************************
 * Copyright (c) 2012, Jean-David Gadina - www.xs-labs.com
 * All rights reserved.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.</declaration_comment>
    <declaration_comment>*/</declaration_comment>
<declaration_comment>/* $Id$ */</declaration_comment>
@<declaration_type>class</declaration_type> <declaration_var>CKDiagnostic</declaration_var>;  </declaration>
<desc><p/></desc>
<timestamp>Wednesday, May 14, 2014</timestamp>
</class><class id="//xsdoc_ref/occ/cl/CKFixIt" lang="occ"><name>CKFixIt</name>
<attributes><attribute><name>Superclass</name><value><hd_link logicalPath="//xsdoc_ref/occ/cl/NSObject">NSObject</hd_link></value></attribute>
</attributes>
<declaration>@<declaration_type>interface</declaration_type> <declaration_type>CKFixIt</declaration_type>: <declaration_type>NSObject</declaration_type> { 
        @@protected  <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>_string</declaration_var>; 
        <declaration_type>NSRange</declaration_type> <declaration_var>_range</declaration_var>;  
        @@private  <declaration_type>id</declaration_type> <declaration_type>__CKFixIt_Reserved</declaration_type>[ <declaration_number>5</declaration_number> ] <declaration_keyword>__attribute__</declaration_keyword>( ( <declaration_var>unused</declaration_var> ) ); 
        }  @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type><declaration_var>string</declaration_var>;  @property( <declaration_param>atomic</declaration_param>,
        <declaration_param>readonly</declaration_param> ) <declaration_type>NSRange</declaration_type> <declaration_var>range</declaration_var>;   + ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>fixItsForDiagnostic</declaration_type>: ( <declaration_type>CKDiagnostic</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>diagnostic</declaration_var>;  
    + ( <declaration_param>id</declaration_param> )<declaration_type>fixItWithDiagnostic</declaration_type>: ( <declaration_type>CKDiagnostic</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>diagnostic</declaration_type> <declaration_type>index</declaration_type>: ( <declaration_param>NSUInteger</declaration_param> )<declaration_var>index</declaration_var>;  
    - ( <declaration_param>id</declaration_param> )<declaration_type>initWithDiagnostic</declaration_type>: ( <declaration_type>CKDiagnostic</declaration_type> <declaration_type>*</declaration_type> )<declaration_type>diagnostic</declaration_type> <declaration_type>index</declaration_type>: ( <declaration_param>NSUInteger</declaration_param> )<declaration_var>index</declaration_var>;   
    @@end </declaration>
<desc><p/></desc>
<methods><method id="//xsdoc_ref/occ/clm/CKFixIt/fixItsForDiagnostic:" lang="occ" type="clm" accessControl="private"><name>fixItsForDiagnostic:</name>
<parsedparameterlist>
<parsedparameter><type>( CKDiagnostic * )</type><name>diagnostic</name></parsedparameter>
<parsedparameter><type>( CKDiagnostic * )</type><name>diagnostic</name></parsedparameter>
<parsedparameter><type>( NSUInteger )</type><name>index</name></parsedparameter>
<parsedparameter><type>( CKDiagnostic * )</type><name>diagnostic</name></parsedparameter>
<parsedparameter><type>( NSUInteger )</type><name>index</name></parsedparameter>
</parsedparameterlist>
<returntype> NSArray * </returntype>
<declaration>+ ( <declaration_type>NSArray</declaration_type> <declaration_type>*</declaration_type> )<declaration_function>fixItsForDiagnostic</declaration_function>: ( <declaration_type>CKDiagnostic</declaration_type> <declaration_type>*</declaration_type> )<declaration_var>diagnostic</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/clm/CKFixIt/fixItWithDiagnostic:index:" lang="occ" type="clm" accessControl="private"><name>fixItWithDiagnostic:index:</name>
<parsedparameterlist>
<parsedparameter><type>( CKDiagnostic * )</type><name>diagnostic</name></parsedparameter>
<parsedparameter><type>( NSUInteger )</type><name>index</name></parsedparameter>
<parsedparameter><type>( CKDiagnostic * )</type><name>diagnostic</name></parsedparameter>
<parsedparameter><type>( NSUInteger )</type><name>index</name></parsedparameter>
</parsedparameterlist>
<returntype> id </returntype>
<declaration>+ ( <declaration_type>id</declaration_type> )<declaration_function>fixItWithDiagnostic</declaration_function>: ( <declaration_type>CKDiagnostic</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>diagnostic</declaration_param> 
        <declaration_function>index</declaration_function>: ( <declaration_type>NSUInteger</declaration_type> )<declaration_var>index</declaration_var>; </declaration>
<desc><p/></desc>
</method><method id="//xsdoc_ref/occ/instm/CKFixIt/initWithDiagnostic:index:" lang="occ" type="instm" accessControl="private"><name>initWithDiagnostic:index:</name>
<parsedparameterlist>
<parsedparameter><type>( CKDiagnostic * )</type><name>diagnostic</name></parsedparameter>
<parsedparameter><type>( NSUInteger )</type><name>index</name></parsedparameter>
</parsedparameterlist>
<returntype> id </returntype>
<declaration>- ( <declaration_type>id</declaration_type> )<declaration_function>initWithDiagnostic</declaration_function>: ( <declaration_type>CKDiagnostic</declaration_type> <declaration_type>*</declaration_type> )<declaration_param>diagnostic</declaration_param> 
        <declaration_function>index</declaration_function>: ( <declaration_type>NSUInteger</declaration_type> )<declaration_var>index</declaration_var>; </declaration>
<desc><p/></desc>
</method></methods>
<properties><property id="//xsdoc_ref/occ/instp/CKFixIt/range" lang="occ" accessControl="private"><name>range</name>
<returntype>NSRange</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSRange</declaration_type> <declaration_var>range</declaration_var>; </declaration>
<desc><p/></desc>
</property><property id="//xsdoc_ref/occ/instp/CKFixIt/string" lang="occ" accessControl="private"><name>string</name>
<returntype>NSString *</returntype>
<declaration>@property( <declaration_param>atomic</declaration_param>,
    <declaration_param>readonly</declaration_param> ) <declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>string</declaration_var>; </declaration>
<desc><p/></desc>
</property></properties>
<globals><variable id="//xsdoc_ref/occ/data/CKFixIt/__CKFixIt_Reserved" lang="occ" accessControl="private"><name>__CKFixIt_Reserved</name>
<returntype>id</returntype>
<declaration><declaration_type>id</declaration_type> <declaration_type>__CKFixIt_Reserved</declaration_type>[ <declaration_number>5</declaration_number> ] <declaration_keyword>__attribute__</declaration_keyword>( ( <declaration_var>unused</declaration_var> ) ); </declaration>
<desc><p/></desc>
</variable><variable id="//xsdoc_ref/occ/data/CKFixIt/_range" lang="occ" accessControl="protected"><name>_range</name>
<returntype>NSRange</returntype>
<declaration><declaration_type>NSRange</declaration_type> <declaration_var>_range</declaration_var>; </declaration>
<desc><p/></desc>
</variable><variable id="//xsdoc_ref/occ/data/CKFixIt/_string" lang="occ" accessControl="protected"><name>_string</name>
<returntype>NSString *</returntype>
<declaration><declaration_type>NSString</declaration_type> <declaration_type>*</declaration_type> <declaration_var>_string</declaration_var>; </declaration>
<desc><p/></desc>
</variable></globals>
<timestamp>Wednesday, May 14, 2014</timestamp>
</class></classes>
<timestamp>Wednesday, May 14, 2014</timestamp>
</header>